#+TITLE: Emacs workshop 2022: Day 2
#+DATE: 2022-01-20
#+AUTHOR: Maikol Sol√≠s
#+options: H:2 title:nil toc:nil
#+PROPERTY: header-args :exports code

* =org-mode= introduction

** What is =org-mode=?

#+begin_src dot :file org_flow.png :exports results
digraph G {
    layout=circo;
    // rankdir=LR;
    // newrank = true;
    // fixedsize = true;
    // forcelabels=true;
    dpi = 600;
    // graph [compound=true, labelloc="t"];
    // edge [lblstyle="above, sloped"];
    node[shape="box"]

    org [label=<
         <TABLE class="table" border="0" cellborder="0" cellspacing="0" >
         <TR><TD fixedsize="true" width="50" height="50"><img src="org_logo.png"/></TD></TR>
         <TR><TD>org-mode</TD></TR>
         </TABLE>> ]

    task [label="Tasks (org-syntax):\nTo-Dos,\nDeadlines,\nPriorities,\n..." ]
    export [label="Export (org-export):\npdf, html,\nodt, md,\n,..." ]
    babel [label="Babel (org-babel):\nR, Python,\n C++, ELisp,\n..." ]
    calendar [label="Calendar (org-agenda):\nAgenda,\n Google Calendar,\n..." ]
    notes [label="Notes (org-roam):\n Zettelkasten,\n Lectures,\n..." ]

    org -> task
    org -> export
    org -> babel
    org -> calendar
    org -> notes
}

#+end_src

#+RESULTS:
#+begin_export latex
[[file:org_flow.png]]
#+end_export

* Why =org-mode= and not Markdown?

First Markdown is just a name for many "flavours"
- the original implementation (2004)
- Markdown Extra
- MultiMarkdown
- GitHub Flavored Markdown
- CommonMark which tries to standardize the Markdown standard (again)

In general there is no consistency. Some examples:

- Headings:

#+begin_example
 Prefix headings:

 # Heading 1
 ## Heading 2
 ### Heading 3

 Pre- and postfix headings:

 = Heading 1 =
 == Heading 2 ==
 === Heading 3 ===

 Underlined headings:

 Heading 1
 =========

 Heading 2
 ~~~~~~~~~

 Heading 3
 *********
#+end_example

- Lists:

#+begin_example
this

,* item 1
,* item 2
,* item 3

is the same as

- item 1
- item 2
- item 3
#+end_example

A good article about it: https://karl-voit.at/2017/09/23/orgmode-as-markup-only/


=Org-mode= is a unified markup language, capable of formating text, run code and export it to multiple formats.
#+begin_example
      |--Code--|             |--Raw Code--> Computer
Ideas-|        |-->Org Mode--|
      |--Text--|             |--Document--> People
#+end_example


* Preparation
1. Enable export in background
#+begin_src elisp
(setq org-export-in-background t)
#+end_src
2. Enable pdf module (optional)
3. Use this command =SPC m e l p=.

* Exercises

** Documentation

https://orgmode.org/worg/dev/org-syntax-edited.html

** Org-mode syntax

Type of emphasis:

# *bold* /emphasis/ =monospace= _underline_ ~verbatim~ +striketrough+ $\alpha + \beta$


** Headings
- Use levels and stars
- TODO states

# #+begin_src elisp
# (setq org-todo-keywords
#       '((sequence "TODO" "FEEDBACK" "VERIFY" "|" "DONE" "CANCELED")))
# #+end_src

# # #+TODO: TODO FEEDBACK VERIFY | DONE CANCELED

** Date and times
- =SPC m d=
- Active
- Inactive
- Deadline
- Scheduled

** Priorities
- =SPC m p=
- A, B, C

** Tags
- C-c C-c
- SPC m q

** Statistical cookies
- =[/]= =[%]=


** Plain lists
- bullets
- checkbox
- statistical cookies
- start in any number

** CLock in & Clock out
- SPC m c i
- SPC m c o
- org-pomodoro => SPC t t


** Tables
- |Name|Phone|Age|
- |-


# | N | N^2 | N^3 | N^4 | sqrt(n) | sqrt[4](N) |
# |---+-----+-----+-----+---------+------------|
# | / | <   |     | >   | <       | >          |
# | 1 |     |     |     |         |            |
# | 2 |     |     |     |         |            |
# | 3 |     |     |     |         |            |
# |---+-----+-----+-----+---------+------------|
# # #+TBLFM: $2=$1^2::$3=$1^3::$4=$1^4::$5=sqrt($1)::$6=sqrt(sqrt(($1)))


** Links

# [[file:org_logo.png]]

# [[../Day_2]]

# [[http://www.google.com]]

# [[http://www.google.com][Google]]


** Captions

# #+caption: Org logo
# [[file:org_logo.png]]



** Labels

# Example #1
# #+caption: Other org logo
# #+name: fig:org
# [[file:org_logo.png]]

# This is a link to [[fig:org]]


# Example #2
# 1. one item
# 2. <<target>>another item
# Here we refer to item [[target]].




** Captures and Templates


# #+begin_src emacs-lisp
# (setq org-capture-templates
#       (setq org-capture-templates
#             '(("t" "Todo" entry
#                (file+headline "~/documents/2022/2022_01_Taller_Emacs/org/gtd.org" "Tasks")
#                "* TODO %?\n  %i\n  %a")
#               ("j" "Journal" entry
#                (file+datetree  "~/documents/2022/2022_01_Taller_Emacs/org/gtd.org" "Journal")
#                "* %?\nEntered on %U\n  %i\n  %a"))))
# #+end_src



org-mode manual: https://orgmode.org/manual/Capture-templates.html

** Agenda views


# #+begin_src elisp
# (setq org-agenda-files '("~/documents/2022/2022_01_Taller_Emacs/org/gtd.org"))
# #+end_src


# #+begin_src elisp
#   (setq org-agenda-custom-commands
#         '(("z" "My own agenda"
#            ((agenda "")
#             (todo "WAIT" nil)
#             (tags-todo "+PRIORITY=\"A\"+TODO=\"NEXT\"")))))
# #+end_src


https://orgmode.org/manual/Custom-Agenda-Views.html
